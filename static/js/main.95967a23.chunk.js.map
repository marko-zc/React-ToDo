{"version":3,"sources":["Components/AddTodoForm.js","Components/TodoItem.js","Components/TodoList.js","App.js","index.js"],"names":["AddTodoForm","props","handleChange","event","newItem","target","value","setState","handleAddTodoClick","preventDefault","state","addTodo","trim","ref","current","focus","alert","React","createRef","this","Form","InputGroup","size","FormControl","placeholder","onChange","autoFocus","Append","Button","variant","type","onClick","Component","TodoItem","handleToggleTodoClick","todo","toggleTodo","id","handleRemoveTodoClick","removeTodo","window","confirm","task","textClass","completed","ListGroup","Item","className","Check","readOnly","inline","checked","TodoList","todos","map","key","App","handleAddTodo","newTodo","uniqueString","handleToggleTodo","find","item","handleRemoveTodo","newTodos","filter","JSON","parse","localStorage","getItem","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95967a23.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Button, Form, FormControl, InputGroup } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\n\r\nclass AddTodoForm extends React.Component\r\n{\r\n    constructor(props) // nepotrebno, može se pisati samo state =\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            newItem: ''\r\n        }\r\n\r\n        this.ref = React.createRef(); // za autofocus\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const newItem = event.target.value;\r\n        this.setState({ newItem });\r\n    };\r\n\r\n    handleAddTodoClick = (event) => {\r\n        event.preventDefault();\r\n\r\n        const { newItem } = this.state;\r\n        const { addTodo } = this.props;\r\n\r\n        if(!newItem || !newItem.trim()){\r\n            alert('Enter your task!');\r\n            return; // obavezno da ne pozove addTodo\r\n        }\r\n\r\n        addTodo(newItem);\r\n\r\n        this.setState({ newItem: '' });\r\n\r\n        if(this.ref.current){   // za autofocus\r\n            this.ref.current.focus();\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        const { newItem } = this.state;\r\n\r\n        return(\r\n            <Form>\r\n                <InputGroup size=\"lg\">\r\n                    <FormControl\r\n                        placeholder=\"Enter new task\"\r\n                        value={newItem}\r\n                        onChange={this.handleChange}\r\n                        autoFocus\r\n                        ref={this.ref}\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button\r\n                            variant=\"outline-secondary\"\r\n                            type=\"submit\"\r\n                            onClick={this.handleAddTodoClick}\r\n                        >Add</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTodoForm;\r\n\r\nAddTodoForm.propTypes = {\r\n    addTodo: PropTypes.func\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Form from 'react-bootstrap/Form';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\n\r\nclass TodoItem extends React.Component\r\n{\r\n    constructor(props) // nepotrebno, može se pisati samo state =\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    handleToggleTodoClick = () => {\r\n        const { todo, toggleTodo } = this.props;\r\n        toggleTodo(todo.id);\r\n    };\r\n\r\n    handleRemoveTodoClick = () => {\r\n        const { todo, removeTodo } = this.props;\r\n        var confirm = window.confirm('Are you sure you want to delete \"' + todo.task + '\"?');\r\n        if (confirm == true) {\r\n            removeTodo(todo.id);\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        const { todo } = this.props;\r\n        const textClass = todo.completed ? 'todo-item__completed' : null;\r\n\r\n        return(\r\n            <ListGroup.Item className=\"todo-item\">\r\n                <span\r\n                    className=\"todo-item_item\"\r\n                    onClick={this.handleToggleTodoClick}\r\n                >\r\n                    <Form.Check readOnly inline checked={todo.completed} />\r\n                    <span className={textClass}>{todo.task}</span>\r\n                </span>\r\n                <span\r\n                    className=\"todo-item__delete-button\"\r\n                    onClick={this.handleRemoveTodoClick}\r\n                >\r\n                    x\r\n                </span>\r\n            </ListGroup.Item>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem;\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object,\r\n    toggleTodo: PropTypes.func,\r\n    removeTodo: PropTypes.func\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport TodoItem from './TodoItem';\r\n\r\n\r\nfunction TodoList({ todos, toggleTodo, removeTodo })\r\n{\r\n    return(\r\n        <ListGroup>\r\n            {todos.map(todo => {\r\n                return(\r\n                    <TodoItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        toggleTodo={toggleTodo}\r\n                        removeTodo={removeTodo}\r\n                    />\r\n                );\r\n            })}\r\n        </ListGroup>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.array,\r\n    toggleTodo: PropTypes.func,\r\n    removeTodo: PropTypes.func\r\n};\r\n","import React from 'react';\nimport uniqueString from 'unique-string';\nimport { AddTodoForm, TodoList } from './Components';\nimport './App.css';\n\nclass App extends React.Component \n{\n  constructor(props) // nepotrebno, može se pisati samo state =\n  {\n    super(props);\n    this.state = {\n      todos: JSON.parse(localStorage.getItem('todos')) || []\n    }\n  }\n\n  // TODO: Add to localStorage\n\n  componentDidUpdate()\n  {\n    localStorage.setItem('todos', JSON.stringify(this.state.todos));\n  }\n\n  handleAddTodo = (value) => {\n    const { todos } = this.state;\n    const newTodo = {\n      id: uniqueString(),\n      task: value,\n      completed: false\n    }\n\n    this.setState({\n      todos: [...todos, newTodo]\n    })\n  } \n\n  handleToggleTodo = (id) => {\n    const { todos } = this.state;\n    const todo = todos.find(item => item.id === id);\n\n    todo.completed = !todo.completed;\n\n    this.setState({ todos });\n  }\n\n  handleRemoveTodo = (id) => {\n    const { todos } = this.state;\n    const newTodos = todos.filter(todo => todo.id !== id);\n\n    this.setState({ todos: newTodos });\n  }\n\n  render()\n  {\n    const { todos } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"header\">My Tasks</h1>\n        <div className=\"todo-container\">\n          <AddTodoForm addTodo={this.handleAddTodo} />\n          <TodoList \n            todos={todos}\n            toggleTodo={this.handleToggleTodo}\n            removeTodo={this.handleRemoveTodo}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}